--DROP TABLE MESSAGES;
--DROP TABLE COMMENTS;
--DROP TABLE FRIENDS;
--DROP TABLE ROSES;
--DROP TABLE NEWS;
--DROP TABLE FARMS;
--DROP TABLE PHOTOS;
--DROP TABLE ALBUMS;
--DROP TABLE USERS_TO_DIALOGS;
--DROP TABLE DIALOGS;
--DROP TABLE USERS;
--DROP TABLE LOGS;

--DELETE USERS;
--SET serveroutput ON;
--SET TIMING ON
--SELECT * FROM USERS;
--select count(*) from users;
--------------------------------------------------------------------------------
CREATE TABLE USERS (
    ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
    FIRST_NAME VARCHAR(30) NOT NULL,
    LAST_NAME VARCHAR(30) NOT NULL,
    AGE INT,
    EMAIL VARCHAR(50) NOT NULL,
    PASS VARCHAR(100) NOT NULL,
    INFO VARCHAR(1000),
    AVATAR VARCHAR(200),
    
    CONSTRAINT USERS_PKEY PRIMARY KEY(ID),
    CONSTRAINT USERS_EMAIL_UNIQUE UNIQUE(EMAIL));
--------------------------------------------------------------------------------
CREATE TABLE FRIENDS (
    USER_1 INT NOT NULL,
    USER_2 INT NOT NULL,
    
    CONSTRAINT FRIENDS_PKEY PRIMARY KEY(USER_1,USER_2),
    CONSTRAINT USER1_ID_FKEY FOREIGN KEY (user_1) REFERENCES USERS ON DELETE CASCADE,
    CONSTRAINT USER2_ID_FKEY FOREIGN KEY (user_2) REFERENCES USERS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE ROSES (
    ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    CREATED TIMESTAMP WITH TIME ZONE NOT NULL,
    INFO VARCHAR(1000) NOT NULL,
    PHOTO VARCHAR(200) NOT NULL,
    USER_ID INT NOT NULL,

    CONSTRAINT ROSES_PKEY PRIMARY KEY(ID),
    CONSTRAINT ROSES_NAME_UNIQUE UNIQUE(NAME),
    CONSTRAINT ROSES_CREATOR_FKEY FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE FARMS (
    ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
    ADDRESS VARCHAR(200) NOT NULL,
    PHONE VARCHAR(15) NOT NULL,
    CREATED TIMESTAMP WITH TIME ZONE NOT NULL,
    USER_ID INT NOT NULL,

    CONSTRAINT FARMS_PKEY PRIMARY KEY(ID),
    CONSTRAINT FARMS_REGION_UNIQUE UNIQUE(ADDRESS),
    CONSTRAINT FARMS_PHONE_UNIQUE UNIQUE(PHONE),
    CONSTRAINT FARMS_USER_FKEY FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE NEWS (
    ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
    TITLE VARCHAR(50) NOT NULL,
    INFO VARCHAR(1000) NOT NULL,
    PHOTO VARCHAR(200) NOT NULL,
    CREATED TIMESTAMP WITH TIME ZONE NOT NULL,
    USER_ID INT NOT NULL,
    
    CONSTRAINT NEWS_PKEY PRIMARY KEY(ID),
    CONSTRAINT NEWS_TITLE_UNIQUE unique(TITLE),
    CONSTRAINT NEWS_USER_FKEY FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE ALBUMS (
    ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
    TITLE VARCHAR(50) NOT NULL,
    USER_ID INT NOT NULL,
    CREATED TIMESTAMP WITH TIME ZONE NOT NULL,
    
    CONSTRAINT ALBUMS_PKEY PRIMARY KEY(ID),
    CONSTRAINT ALBUMS_USER_FKEY FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE PHOTOS (
	ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
	PHOTO VARCHAR(200) NOT NULL,
	ALBUM_ID INT NOT NULL,
	CREATED TIMESTAMP WITH TIME ZONE NOT NULL,
	LONGITUDE NUMBER(9,3),
	LATITUDE NUMBER(9,3),

	CONSTRAINT PHOTOS_PKEY PRIMARY KEY(ID),
	CONSTRAINT PHOTOS_ALBUM_FKEY FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE COMMENTS (
	ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
	INFO VARCHAR(1000) NOT NULL,
	PHOTO_ID INT NOT NULL,
	USER_ID INT NOT NULL,
	CREATED TIMESTAMP WITH TIME ZONE NOT NULL,
  
	CONSTRAINT COMMENTS_PKEY PRIMARY KEY(ID),
	CONSTRAINT COMMENTS_PHOTO_FKEY FOREIGN KEY (PHOTO_ID) REFERENCES PHOTOS ON DELETE CASCADE,
	CONSTRAINT COMMENTS_USER_FKEY FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE DIALOGS (
	ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
	CREATOR_ID INT NOT NULL,
	TITLE VARCHAR(50) NOT NULL,
	CREATED TIMESTAMP WITH TIME ZONE NOT NULL,

	CONSTRAINT DIALOGS_PKEY PRIMARY KEY(ID),
	CONSTRAINT DIALOGS_USER_FKEY FOREIGN KEY (CREATOR_ID) REFERENCES USERS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE USERS_TO_DIALOGS (
	USER_ID INT NOT NULL,
	DIALOG_ID INT NOT NULL,

	CONSTRAINT UD_USER_FKEY FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE,
	CONSTRAINT UD_DIALOG_FKEY FOREIGN KEY (DIALOG_ID) REFERENCES DIALOGS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE MESSAGES (
	ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
	INFO VARCHAR(1000) NOT NULL,
	USER_ID INT NOT NULL,
	DIALOG_ID INT NOT NULL,
	CREATED TIMESTAMP WITH TIME ZONE NOT NULL,

	CONSTRAINT MESSAGES_PKEY PRIMARY KEY(ID),
	CONSTRAINT MESSAGES_USER_FKEY FOREIGN KEY (USER_ID) REFERENCES USERS ON DELETE CASCADE,
	CONSTRAINT MESSAGES_DIALOG_FKEY FOREIGN KEY (DIALOG_ID) REFERENCES DIALOGS ON DELETE CASCADE);
--------------------------------------------------------------------------------
CREATE TABLE LOGS (
  ID INT GENERATED ALWAYS AS IDENTITY NOT NULL,
  TABLE_NAME VARCHAR(200),
  EXECUTED_BY_USER VARCHAR(200),
  EVENT_TIME DATE,
  OPERATION VARCHAR(20),
  OLD_VALUE VARCHAR(2000),
  NEW_VALUE VARCHAR(2000),
    
  CONSTRAINT LOGS_PKEY PRIMARY KEY(ID));
--------------------------------------------------------------------------------